(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    212603,       4191]
NotebookOptionsPosition[    210163,       4111]
NotebookOutlinePosition[    210757,       4135]
CellTagsIndexPosition[    210670,       4130]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"?", "ContourPlot"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.580033686838456*^9, 3.580033692025076*^9}, {
  3.580536221055894*^9, 3.580536227189667*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) generates \
a contour plot of \!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) as a function of \!\
\(\*StyleBox[\\\"x\\\", \\\"TI\\\"]\) and \!\(\*StyleBox[\\\"y\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"==\\\", StyleBox[\\\"g\\\
\", \\\"TI\\\"]}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) plots \
contour lines for which \!\(\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"=\\\", StyleBox[\\\"g\\\", \\\"TI\\\"]}]\). \
\\n\!\(\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"==\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"==\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) plots \
several contour lines. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ContourPlot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.580536228460326*^9},
 CellTags->"Info3580543428-4403620"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "^", "2"}], "+", 
     RowBox[{"3", "x", " ", "y"}], "-", " ", "y"}], "\[Equal]", 
    RowBox[{
     RowBox[{"x", "^", "3"}], "-", 
     RowBox[{"3", 
      RowBox[{"x", "^", "2"}]}], "+", "x", "+", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<    \>\"", ";", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "^", "2"}], " ", "+", 
           RowBox[{"3", "x", " ", "y"}], "-", " ", "y"}], "\[Equal]", 
          RowBox[{
           RowBox[{"x", "^", "3"}], "-", 
           RowBox[{"3", 
            RowBox[{"x", "^", "2"}]}], "+", "x", "+", "1"}]}]}], ",", 
        "Orange", ",", "30"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "LightBrown"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "1000"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580033838473553*^9, 3.580033954850484*^9}, {
   3.580034143948163*^9, 3.580034217232854*^9}, {3.580034270224409*^9, 
   3.580034301006124*^9}, {3.580034347528462*^9, 3.58003438457322*^9}, {
   3.580034422431975*^9, 3.580034443701277*^9}, 3.580034498146076*^9, {
   3.580034531612291*^9, 3.580034545900124*^9}, {3.58003463534101*^9, 
   3.580034684214643*^9}, {3.580536159471349*^9, 3.580536205599663*^9}, {
   3.580536287465695*^9, 3.580536297128955*^9}, {3.580536345310593*^9, 
   3.580536372421393*^9}, {3.580536406625835*^9, 3.580536416056711*^9}, {
   3.58053682087808*^9, 3.580536833128415*^9}, {3.580537152037989*^9, 
   3.580537189901454*^9}, {3.580537496699205*^9, 3.580537594602659*^9}, {
   3.580537634257919*^9, 3.580537634401447*^9}, {3.580537844476257*^9, 
   3.580537852033367*^9}, {3.580540235160925*^9, 3.580540356504081*^9}, {
   3.580542190405668*^9, 3.58054228461878*^9}, {3.580542348914803*^9, 
   3.580542350183712*^9}, {3.580542401827611*^9, 3.580542403010873*^9}, {
   3.580542436615818*^9, 3.580542447902757*^9}, {3.580542514111098*^9, 
   3.580542530126611*^9}, {3.580542604861442*^9, 3.580542614769059*^9}, 
   3.58054268290154*^9, {3.58054274551431*^9, 3.580542747218342*^9}, {
   3.580542923119945*^9, 3.580542923293856*^9}, {3.580542979880389*^9, 
   3.580542981093295*^9}, {3.58054328864748*^9, 3.580543308225172*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "^", "2"}], "-", 
       RowBox[{"x", " ", "y"}], "+", " ", "y"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "-", 
       RowBox[{"3", 
        RowBox[{"x", "^", "2"}]}], "+", "x", "+", "1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"y", "^", "2"}], " ", "-", 
            RowBox[{"x", " ", "y"}], "+", " ", "y"}], "\[Equal]", 
           RowBox[{
            RowBox[{"x", "^", "3"}], "-", 
            RowBox[{"3", 
             RowBox[{"x", "^", "2"}]}], "+", "x", "+", "1"}]}], ",", "Orange",
           ",", "30"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", "LightBrown"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1000"}]}], "]"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580536630137661*^9, 3.580536756818897*^9}, {
  3.580541266442605*^9, 3.580541276747439*^9}, {3.580542698884842*^9, 
  3.580542733058559*^9}, {3.580542999016031*^9, 3.580542999686386*^9}, {
  3.580543400957348*^9, 3.580543401823708*^9}}],

Cell[BoxData[
 FrameBox[
  GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {Hue[0.67, 0.6, 0.6], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
         156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
          170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
         183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
          197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
         210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
          224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 
         237, 238, 239, 240, 241, 242}], LineBox[CompressedData["
1:eJwV0ddCDgAAQOE/m+ydrIRssnc2oZCREVIhMyW7kL2ys8nKSkb2TsYTeBNb
wufiuzxXJywpLW5lUCAQ+MRnvvCVb3znBz/5RRm/KecPfwmIg6hARSpRmSpU
pRrVqUEwNalFbepQl3rUpwENaURjmtCUEJoRSnNa0JJWtCaMNoTTlna0J4IO
dKQTnelCV7rRnR5E0pNe9KYPfelHfwYwkEEMZghDiWIYwxnBSEYxmjGMZRzR
jGcCE4khlklMZgpxTGUa05lBPDOZxWzmkMBc5jGfRBaQRDIpLGQRi0llCUtZ
xnJW8H96GqtIJ4PVZLKGtaxjPRvYyCayyGYzW9hKDtvYzg52sovd7GEv+9jP
AXI5yCEOc4SjHOM4eZzgJKc4zRnOco7zXCCfi1ziMle4SgHXuM4NbnKLQm5T
xB3uco/7FPOAhzziMU94yjOe84KXvOI1byjhLaW84z0f+Mg/j+hc6Q==
         "]]},
       RowBox[{
         RowBox[{"y", "-", 
           RowBox[{"x", " ", "y"}], "+", 
           SuperscriptBox["y", "2"]}], "\[Equal]", 
         RowBox[{"1", "+", "x", "-", 
           RowBox[{"3", " ", 
             SuperscriptBox["x", "2"]}], "+", 
           SuperscriptBox["x", "3"]}]}]],
      Annotation[#, $CellContext`y - $CellContext`x $CellContext`y + \
$CellContext`y^2 == 
       1 + $CellContext`x - 3 $CellContext`x^2 + $CellContext`x^3, 
       "Tooltip"]& ]}],
   Axes->True,
   AxesLabel->{"", 
     FormBox[
      StyleBox[
       RowBox[{
         RowBox[{
           RowBox[{"-", 
             RowBox[{"x", " ", "y"}]}], "+", 
           SuperscriptBox["y", "2"], "+", "y"}], "\[LongEqual]", 
         RowBox[{
           SuperscriptBox["x", "3"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox["x", "2"]}], "+", "x", "+", "1"}]}], 
       RGBColor[1, 0.5, 0], 30, StripOnInput -> False], TraditionalForm]},
   AxesOrigin->{0, 0},
   Background->RGBColor[0.94, 0.91, 0.88],
   Frame->True,
   ImageSize->1000,
   PlotRange->{{-2, 7}, {-3, 3}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]},
   ImageCache->GraphicsData["CompressedBitmap", "\<\
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
eHh/sepg9nYPO46oGhGzb4J7TM6r577xQrl7o4e+xZJLVIPy+bpf0EvfHGXs
lnLy1zeRGJTm3Bd9B9kaNtPAQ9/iGSNI0hSdVn3/01vfZEVi5t0XfRMhhpNr
X/SNc9jYp3z1vU1fc8pXq75jlrCK6JuQDbdGi7++MXu79TT89Y2NyD3+yEPf
2/U15GG3Mk/M8m0RfcNL3Agdf32TgYab3B4rn63vjHvjDn2NeAJXUl1lHou5
N6oei6E2+3prwUh+BxzJYoxZdDCs7536Gv2aw/NU3zGLS0b0TZiKqZbjuW9i
pl37v7++A8lRhTH56nuXvoZ2UaSiphF9YxV3c8789e3khvvqe7e+xo5lCnKq
azGL/Eb0TQUiU2jTc984r5c5AUG++t5PN5BIpEpYmIaYFZizEcCVzfHI+4wA
UXLuGdSeCbBW0aqtlueLgMTnY35xK77GrAaejQCBfObYjH1BACcmgoRdur4I
SBoF61eF8JqG77MQyLgrp3dLWKDrGFphno25Nad3i1xvypHnhDYmgcLKsS8C
4k1mtrga20q/BCgB5Vbh90wgOG5M1Vz0SkAc4DiKTHkdO3f8EcBC4dY98EyA
iFA2XBUn7ZWADsJXcSguY4t5HEw2AgSCuAkNngkEtQasNuCLgCTtYVZ1wyNi
nhyUjQDSiXvMrmcCSA84smxhO18EJLcS7Vcd5mMaYh4ylY0ApmdXgIsgIIkc
n1R56okFp51y8ugrr7icP7POOfvM/N9+Wh6W9peNPklqmN/sCGanf8TSb2cR
dlTw609quPldatWyhbHoS3gPeRVuecSI09PkmRPmTZ/Y+JnKlaCbc0hQOlH8
+CR25ERU4p6OXDJ/JiWaLxg7bFDOcU/pRAlecY0pEUQl57v8V599PPniCy+Q
G9dEBI6lk8JmyLJQNlXVsNA86xQULiCqqnrNd97gF4F/808/7dR4bxeEodX9
YJAbhhdxEp8QP3TFojntH7y/7ONNP2nQ7qEH7lUhXkmIO0dxZSMea5UKgaBo
o8oF8EpAPjQWK7cOWcwDHbMRQFogf32fESBMmyHiX78EpAwDRlTXtBDz7M9s
BPCeuPYFzwTIsENTsSeS+SIg1TLIc3TDwmMeVZuNAHXt3eBXzwTwehC0bGUe
XwSkqAkFRtzqGDFPNc5GAN+HeyinZwI44tC/rL7ri4DUnoGTukk/MQ/AzkaA
WeRKzp4JBJKzHSJfBKREEE59t0RftrPSo00C0u1L7VuNcWOb5ppnk5gEDrbD
QaaLLdgU82T3jAQOsTPG1bXm+SXAjCHbfp8RwJgBa7ZD5IuAFPgqbESa65cA
cVquOckzAYIFXU3BFwGpw0bClKsKzPFLgHBPtxy8ZwJU86NKofXZ+yIg5fkK
F/af7ZcA6qiboOWZAOZJytT4JyBVFEmrJU3aNszySwDF0ZzNtC8IFFYUfRGQ
Ypc4ddSRDqZhpl8CzCKXF3kmQP0mkggsL/JFQOqiEk/mniwzIwuB6A1eumXe
uOcBTzPPJtngpdvgqDvLd7KhzZWAlMsl+cYdjul+CVC7zzWDeSaAKYS6EHbG
+CIgVY3ZvdRpBO6n9UeAIXLLLHom8Cc5JcTqXr4ISAFsKle4MtBUvwSwN1MR
bp8RYIN3+Y4vAlIrvbC9eYpfAnAgc2zSviDA3uuWEfFFQEraE9LjbvCT/RJg
g3dPcPJMgIAk9/AFXwTk9APG343vnOSTgA0C84w7iDix+5gv3HI8BjUqCGq0
DROzEIje1qVbyoG4OTLjzbNJtnXpFu+We+poNrS5EjhBNxRWJyb4JYBS6nIb
zwQoH0lUumXIvgicqBtIlXYZ8ni/BF5r03y0W6HPMwHOBSf50yZl+yJwkm7A
tOFancf5JUAKtRty65kA+asEI9jTmHwRkMPBCIvkKAnbMNYvAXxHroHMM4Hg
9GRrIPNFQM6Ro3gdfjzbMMYvgcKBaJ4JBDZE697xRUCOHMTq7Ka2j/ZLAF5k
Tt3YFwRQVN3DUrMRiN5/5UzKwlLzCPNskv1XuuWIUddPMcrTcAgBaiC4hnlf
BOTgVA4QdRfVSL8EqC9LhtU+IwDfYVGpA/y8EpAzdokTc0+2GeGXAAnrboKO
ZwKYNrA6+ycgx0Vz0IZbKmC4XwIsMjdO2zMBmINrUvVMAIZGKJMyknklIOem
MzwuLxrml0Bwxq2N3/BF4EzdQGiFG9Y71C8BSsC61QQ8EwjCem3MagQBiXEq
26FVs0733XNXxS8aN/zy8QqPPtqs6afxYpzO0g2F5aMh2YgXL9e6WdNjFs1W
vO2kOVPHb96/RInYgYJCn5oEbixnBH2JCbq2X4/Oy0484XjOhE8lIVrYmBRB
VOrX3dGlfasnGzesN/i6a646bsGsydH11tKpBWFzeBd0w0DzbCnnxd55u3q1
ei89X0U6jPFiZ+sGwp/dhsFZp9LtXTu0JiCQX0992qBun1tvvjHeVFJ/RSTX
CSFCHTuUu+8e5mzPO267+YqhA3r7JRRr9f23s39PZ2HHX4U5SYpy7Y3/LyFd
UIRr5/8H9fefhCXsWtjY//dT/Z9jSfKpdtNg/5rJX7LHWgam/vr1P+eqPlGq
4OXNQ9/9bVe9Qzbuql1y8PZWV521fuGw1DkRbVdEtO1FSUvjcmhUiT+sWz5t
9+6aqeDPlt21iq/Z9eFB56+f/03qrBzuuSyHe/ZCcHo6gv1Lrv1p8e+76pbh
qQk7vrqo1NofFz68cVyTpTs/PoH/PzO32y7N7ba9oJyWPux5V26Y3fOrrd0e
4WWC46U6bOt0z6dbeupT58/M8b5Lc7xvLzTaIhGceXfB+vmDdu5+v9g56xcM
SZ0Xcu3KkGtRPebvt+aXlT/sbHjMsO0t/8r/nxt++S/hl/fqWluYgnMCe29r
dxNjfuuGqW0DsM61K0OuRfWY/+XWbo9y5/wdTU7NX7N6+bnhl/8SfnmvrrV1
MHWJXiY1twx4acOu2gewVGpv6fcCDwQn/dyzcVJzrq/bVefAL7Z2f+yAtT8t
El6T/9nWHhWCCf7EptEfSazQjt3v5w3f3kK/4RHht/4p91vPTwhSM8kD+FS3
bJja7uttX9+1bOfHx2/d/UHBrt019/vXrrqlWRFvbx702hFrV8w6MCGZ40Pe
pEzCvg4N6Uv22bZbO98XjEqquPo7j1n++KbRDfZaOyfpj3uxfrD4mtVLeV/1
SDH194EsOsYl2CgOWvvjArgTrf/cVf+wGTuanv3N9lZXF1vz84rgZVpu7VKO
9k27au+/ameDow5c+9PC4CDlkM8Yfv9JMe8/19M76BVY6vC1K2dBNxjIdls7
3XvF+jm9T1y3ZAJzZMz2ZpdxnX7KbpzUrKQn8n8Mee3Snvo+JKTvQ23fx65b
NuW1zYPfkr7zmf7XbpjRmSmft+bnNMbw5/RpUwL6U3Z8cT5Pjdze4oq6W/o+
u3l3rRKVN42qL7y7xCMbxzUOhvKxTWM/YX6P2N7iL1U2jagdTJvu29rfSvvY
7c0uHbC9zbXvbB5YLWrahN4fMW1C7z/X0zvofgroZ9z2ry4J7nt388BXg3Vc
sGb1Mu7nOuvx+g3Tvxa1vuj0M8+bovcdNm90yHA+yyR4jg2k0P6p942DWaJn
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\
\>"]],
  FrameStyle->Thickness[Large],
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.580994424989897*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "^", "2"}], "-", 
       RowBox[{"2", "x", " ", "y"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "-", 
       RowBox[{"x", "^", "2"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<SINGULAR\>\"", ",", "Red", ",", "30"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", " ", "LightBrown"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1000"}]}], "]"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580541588128818*^9, 3.580541657770301*^9}, {
   3.580542768776926*^9, 3.580542782533885*^9}, {3.58054301922421*^9, 
   3.58054301991456*^9}, {3.580543440841827*^9, 3.580543505628523*^9}, {
   3.580543838194774*^9, 3.580543838675495*^9}, {3.580544411615706*^9, 
   3.580544416790273*^9}, 3.580547037767558*^9}],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "^", "2"}], "+", 
       RowBox[{"x", " ", "y"}], "+", "y"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "+", 
       RowBox[{"x", "^", "2"}], "+", "x", "+", "1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"y", "^", "2"}], "+", 
            RowBox[{"x", " ", "y"}], "+", "y"}], "\[Equal]", 
           RowBox[{
            RowBox[{"x", "^", "3"}], "+", 
            RowBox[{"x", "^", "2"}], "+", "x", "+", "1"}]}], ",", "Orange", 
          ",", "30"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", " ", "LightBrown"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1000"}]}], "]"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580543711540922*^9, 3.580543760042858*^9}}],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "^", "2"}], "-", 
       RowBox[{"x", " ", "y"}], "+", "y"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "+", 
       RowBox[{"x", "^", "2"}], "-", "x", "-", "1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"y", "^", "2"}], "-", 
            RowBox[{"x", " ", "y"}], "+", "y"}], "\[Equal]", 
           RowBox[{
            RowBox[{"x", "^", "3"}], "+", 
            RowBox[{"x", "^", "2"}], "-", "x", "-", "1"}]}], ",", "Orange", 
          ",", "30"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", " ", "LightBrown"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1000"}]}], "]"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580541334599972*^9, 3.580541345714581*^9}, {
  3.580543890421191*^9, 3.58054395503039*^9}}],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "^", "2"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "+", 
       RowBox[{"x", "^", "2"}], "-", "x"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "^", "2"}], "\[Equal]", 
           RowBox[{
            RowBox[{"x", "^", "3"}], "+", 
            RowBox[{"x", "^", "2"}], "-", "x"}]}], ",", "Orange", ",", "30"}],
          "]"}]}], "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", " ", "LightBrown"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1000"}]}], "]"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580543986375172*^9, 3.580544041329073*^9}, {
  3.58096114212128*^9, 3.580961144150295*^9}}],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "^", "2"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "+", 
       RowBox[{"x", "^", "2"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<SINGULAR\>\"", ",", "Red", ",", "30"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", " ", "LightBrown"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1000"}]}], "]"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580544211455225*^9, 3.58054438119102*^9}, {
  3.580547075575921*^9, 3.580547111543723*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"ReplaceAll", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "^", "2"}], "+", 
       RowBox[{"a1", " ", "x", " ", "y"}], "+", 
       RowBox[{"a3", " ", "y"}], " ", "-", " ", 
       RowBox[{"x", "^", "3"}], " ", "-", 
       RowBox[{"a2", " ", 
        RowBox[{"x", "^", "2"}]}], " ", "-", " ", 
       RowBox[{"a4", " ", "x"}], " ", "-", " ", "a6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", "\[Rule]", " ", 
       RowBox[{"y", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", " ", "x"}], " ", "+", " ", "a3"}], ")"}], "/", 
         "2"}]}]}], "}"}]}], "]"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.580037424040562*^9, 3.580037515133208*^9}, {
  3.580037585100031*^9, 3.580037905086701*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["a3", "2"]}], "-", 
     RowBox[{"4", " ", "a6"}], "-", 
     RowBox[{"2", " ", "a1", " ", "a3", " ", "x"}], "-", 
     RowBox[{"4", " ", "a4", " ", "x"}], "-", 
     RowBox[{
      SuperscriptBox["a1", "2"], " ", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"4", " ", "a2", " ", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["y", "2"]}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.580037906807201*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"ReplaceAll", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "^", "2"}], "-", " ", 
       RowBox[{"x", "^", "3"}], " ", "-", 
       RowBox[{"a2", " ", 
        RowBox[{"x", "^", "2"}]}], " ", "-", " ", 
       RowBox[{"a4", " ", "x"}], " ", "-", " ", "a6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", " ", 
       RowBox[{"x", "-", 
        RowBox[{"a2", "/", "3"}]}]}], "}"}]}], "]"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.5800379229635*^9, 3.580037944624303*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["a2", "3"]}], "27"]}], "+", 
   FractionBox[
    RowBox[{"a2", " ", "a4"}], "3"], "-", "a6", "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a2", "2"], " ", "x"}], "3"], "-", 
   RowBox[{"a4", " ", "x"}], "-", 
   SuperscriptBox["x", "3"], "+", 
   SuperscriptBox["y", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.580037945356928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"ReplaceAll", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "^", "2"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "^", "2"}]}], ")"}]}], "==", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"3", 
        RowBox[{"x", "^", "2"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "2"}], ")"}], "/", "x"}]}], ",", 
      RowBox[{"y", "\[Rule]", " ", 
       RowBox[{"y", "/", 
        RowBox[{"(", 
         RowBox[{"(", 
          RowBox[{"x", "-", "1"}], ")"}], ")"}]}]}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.580624166663455*^9, 3.5806243370334883`*^9}, {
   3.580625091778988*^9, 3.580625216770993*^9}, {3.580625263655757*^9, 
   3.5806252988261747`*^9}, 3.58062548810646*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["y", "2"]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
    SuperscriptBox["x", "2"]}]], "\[Equal]", 
  RowBox[{"1", "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"]}], 
    SuperscriptBox["x", "2"]]}]}]], "Output",
 CellChangeTimes->{{3.5806251895856037`*^9, 3.580625218722416*^9}, {
   3.580625274200212*^9, 3.580625299864707*^9}, 3.580625490884405*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["y", "2"], "\[Equal]", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"]}]}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "/", "4"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.580625400162396*^9, 3.5806255179388647`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["y", "2"], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "3"}], "+", 
   RowBox[{"6", " ", "x"}], "-", 
   RowBox[{"4", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   SuperscriptBox["x", "3"]}]}]], "Output",
 CellChangeTimes->{{3.580625416574025*^9, 3.580625518415434*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "^", "2"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"x", "^", "2"}]}], ")"}]}], "==", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"3", 
         RowBox[{"x", "^", "2"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "4"}], "+", 
       RowBox[{
        RowBox[{"y", "^", "2"}], "/", "16"}]}], "\[Equal]", "1"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "^", "2"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"x", "^", "2"}]}], ")"}]}], "==", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", 
            RowBox[{"x", "^", "2"}]}]}], ")"}]}], ",", "10"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", " ", "LightBrown"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5806258491072397`*^9, 3.580626008667061*^9}, {
  3.5806261277249317`*^9, 3.580626157991273*^9}, {3.580626211555147*^9, 
  3.5806263133715477`*^9}}],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], ")"}], "^", "2"}], "\[Equal]", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "-", 
         RowBox[{"y", "^", "2"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", ".75"}], ",", ".75"}], "}"}], ",", 
     RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", " ", "LightBrown"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1000"}]}], "]"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580706700082906*^9, 3.580706872034477*^9}, {
  3.580707284025657*^9, 3.580707284217272*^9}}],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "2"}], "/", "4"}], "+", 
        RowBox[{
         RowBox[{"y", "^", "2"}], "/", "16"}]}], ")"}], "\[Equal]", "1"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", " ", "LightBrown"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1000"}]}], "]"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580708002266911*^9, 3.580708036177286*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "^", "2"}], "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"a", "^", "4"}], "-", 
       RowBox[{"r", "^", "4"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "a"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.58071035054956*^9, 3.580710366579668*^9}, {
  3.580710396767146*^9, 3.580710433946079*^9}, {3.580720899834945*^9, 
  3.580720918573959*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"a", " ", 
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["5", "4"], "]"}]}], 
    RowBox[{"Gamma", "[", 
     FractionBox["3", "4"], "]"}]], ",", 
   RowBox[{"a", ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.580710414123374*^9, 3.580710435121278*^9}, {
  3.580720918169732*^9, 3.580720921573314*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"3", 
         RowBox[{"r", "^", "2"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"r", "^", "2"}]}], ")"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.580728142723556*^9, 3.580728181998125*^9}}],

Cell[BoxData[
 RowBox[{"EllipticE", "[", 
  RowBox[{"-", "3"}], "]"}]], "Output",
 CellChangeTimes->{3.580728184574968*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "^", "2"}], "-", 
       RowBox[{"x", " ", "y"}], "+", " ", "y"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "-", 
       RowBox[{"3", 
        RowBox[{"x", "^", "2"}]}], "+", "x", "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"y", "^", "2"}], " ", "-", 
           RowBox[{"x", " ", "y"}], "+", " ", "y"}], "\[Equal]", 
          RowBox[{
           RowBox[{"x", "^", "3"}], "-", 
           RowBox[{"3", 
            RowBox[{"x", "^", "2"}]}], "+", "x", "+", "1"}]}], ",", "30"}], 
        "]"}]}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", "LightBrown"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", " ", "700"}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"15", ",", "20"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQrf3yQoHJuleOXSJHKkD0UwuzGWD+mouzQHTfuWeL
QXSiUe0qEH38dMNqMyCtt9tmA4i2D1l+BETb5j09AaIP5xdcAdG5KeLXQfQx
zrn3QLS895cnIPr6XfdvIJp10/7/IHq+0kZmcyBtvmMPK4gWae/kBNFzZnzj
BtEXY2OEQHTQpw5REP3y3TplEL2l3EIVRPNEs2qD9a/wBNMeok/NQPSu7FtW
IHqSao0jiP7rne4Eot8+tvQE090RXiB6rW9TLIheE3QiDkRve8X+E0Qf9Xz7
B0SHSa5hsgDSe0p+coDo6+f6hUG0WdE8MA0A/xiktA==
  "]],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
oPnqjfwdmd3wf89r/gfp1YWi
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {Hue[0.67, 0.6, 0.6], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
         156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
          170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
         183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
          197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
         210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
          224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 
         237, 238, 239, 240, 241, 242}], LineBox[CompressedData["
1:eJwl01WQFgQUBtB/F9ilFiSkBVYaBOlSurtLBJSWBglplFC6u7tDAQHpkFJa
ulMFlIbdZYnD8HC++3Rn7sw3N7x559qdggKBQBrxxHzKM57zgggiieIl0bzi
NW8I2AsimBjEJBYhhBKbOMQlHvEJIwEJ+YBEJCYJSfmQZCQnBSlJReqg93d+
RFrSkZ5wPiYDGclEZrKQlWxkJwefkJNcfEpu8pCXfOSnAAUpRGGKUJTP+Jxi
FKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcBDWnEFzTmS5rQ
lGZ8xdc0pwUtaUVr2tCWb2hHezrQkXeld6YLXenGt3SnBz3pxXf0pg996Ud/
BjCQQXzPDwxmCEMZxo/8xHBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxm
DnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcfP/MJ6NrCRX9nEZrbwG1vZxnZ2
sJNd7GYPe9nH7+znAAc5xGH+4E+OcJRjHOcEJznFX5zmDGc5x3kucJFLXOYK
V7nGdW5wk1vc5g5/8w//cpd73Oc//ucBD3nEY57wlGc85wURRBLFS6J5xWve
EAj2/wQTg5jEIoRQYhOHuMQjPmEk4C3w3Y99
         "]]},
       RowBox[{
         RowBox[{"y", "-", 
           RowBox[{"x", " ", "y"}], "+", 
           SuperscriptBox["y", "2"]}], "\[Equal]", 
         RowBox[{"1", "+", "x", "-", 
           RowBox[{"3", " ", 
             SuperscriptBox["x", "2"]}], "+", 
           SuperscriptBox["x", "3"]}]}]],
      Annotation[#, $CellContext`y - $CellContext`x $CellContext`y + \
$CellContext`y^2 == 
       1 + $CellContext`x - 3 $CellContext`x^2 + $CellContext`x^3, 
       "Tooltip"]& ]}], 
   {AbsolutePointSize[12], 
    PointBox[{-0.5391791044776127, -0.8115671641791011}]}, InsetBox[
    StyleBox[Cell["P",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 
       0.8800030518043793]], {-0.8563432835820897, -0.6529850746268652}, {
    Left, Top}, {0.4291044776119402, Automatic},
    Alignment->{Left, Top}], 
   {AbsolutePointSize[12], 
    PointBox[{0.8134328358208952, 0.5130597014925378}]}, 
   InsetBox["", {0.7108208955223878, 0.9235074626865676}, {Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["Q",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 
       0.8800030518043793]], {0.6455223880597007, 0.7555970149253742}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {StrokeForm[Hue[0.25, 0.5, 0.6666666666666666]], EdgeForm[GrayLevel[0]], 
    EdgeForm[None], 
    LineBox[{{-1.0242537313432838`, -1.2873134328358191`}, {
     3.4533582089552217`, 3.134328358208957}}]}, 
   {AbsolutePointSize[12], PointBox[{2.73507462686567, 2.4160447761194037`}]}, 
   {AbsolutePointSize[12], 
    PointBox[{0.8134328358208947, 0.5037313432835832}]}, 
   {AbsolutePointSize[12], 
    PointBox[{-0.5485074626865674, -0.811567164179104}]}, InsetBox[
    StyleBox[Cell["R",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 
       0.8800030518043793]], {2.5018656716417906`, 2.6212686567164183`}, {
    Left, Top}, {0.14925373134328357`, Automatic},
    Alignment->{Left, Top}], 
   {Dashing[{Medium, Medium}], StrokeForm[RGBColor[0.701961, 0.466667, 0]], 
    EdgeForm[GrayLevel[0]], EdgeForm[None], 
    LineBox[{{2.725746268656715, 2.9757462686567164`}, {
     2.716417910447759, -2.080223880597013}}]}, 
   {AbsolutePointSize[12], 
    PointBox[{2.725746268656715, -0.7089552238805955}]}, InsetBox[
    StyleBox[Cell["P+",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 
       0.8800030518043793]], {2.884328358208955, -0.6529850746268652}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   InsetBox["", {3.10820895522388, -0.606343283582089}, {Left, Baseline},
    Alignment->{Left, Top}], 
   InsetBox["", {3.0335820895522385`, -0.5783582089552234}, {Left, Top}, {
    0.10261194029850706`, Automatic},
    Alignment->{Left, Top}], 
   InsetBox["", {3.024253731343283, -0.5970149253731338}, {Left, Baseline},
    Alignment->{Left, Top}], 
   InsetBox["", {3.2481343283582085`, -0.8208955223880592}, {Left, Baseline},
    Alignment->{Left, Top}], 
   InsetBox["", {3.229477611940298, -0.7462686567164174}, {Left, Baseline},
    Alignment->{Left, Top}], 
   InsetBox["", {3.4626865671641784`, -0.8395522388059696}, {Left, Top}, {
    0.08395522388059717, Automatic},
    Alignment->{Left, Top}], 
   InsetBox["", {3.5466417910447756`, -0.8395522388059696}, {Left, Baseline},
    Alignment->{Left, Top}], 
   InsetBox["", {3.397388059701492, -0.8395522388059696}, {Left, Top}, {
    0.14925373134328357`, Automatic},
    Alignment->{Left, Top}], 
   InsetBox["", {3.266791044776119, -0.8395522388059696}, {Left, Top}, {
    0.2798507462686568, Automatic},
    Alignment->{Left, Top}], 
   InsetBox["", {3.276119402985074, -0.8208955223880592}, {Left, Baseline},
    Alignment->{Left, Top}], 
   InsetBox["", {3.276119402985074, -0.8208955223880571}, {
    Left, Baseline}, {0.03731343283582089, 0.009328358208955223}, {{1., 0.}, {
    0., 1.}},
    Alignment->{Left, Top}], 
   InsetBox["", {3.276119402985074, -0.8208955223880592}, {Left, Top}, {
    4.878731343283581, Automatic},
    Alignment->{Left, Top}], 
   InsetBox["", {3.276119402985074, 4.8414179104477615`}, {Left, Top}, {
    3.432835820895522, Automatic},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["Q",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 
       0.8800030518043793]], {3.2108208955223803`, -0.44776119402984715`}, {
    Left, Top}, {0.2425373134328358, 0.27052238805970147`}, {{1., 0.}, {0., 
    1.}},
    Alignment->{Left, Top}]},
  Axes->True,
  AxesLabel->{"", 
    FormBox[
     StyleBox[
      RowBox[{
        RowBox[{
          RowBox[{"-", 
            RowBox[{"x", " ", "y"}]}], "+", 
          SuperscriptBox["y", "2"], "+", "y"}], "\[LongEqual]", 
        RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"3", " ", 
            SuperscriptBox["x", "2"]}], "+", "x", "+", "1"}]}], 30, 
      StripOnInput -> False], TraditionalForm]},
  AxesOrigin->{0, 0},
  Background->RGBColor[0.94, 0.91, 0.88],
  Frame->True,
  ImagePadding->{{17., 13.}, {16., 46.}},
  ImageSize->700,
  PlotRange->{{-2.125, 4.125}, {-3.125, 3.125}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.581009605522847*^9, 3.581009618106318*^9}, {
  3.581009655634277*^9, 3.581009663436247*^9}, {3.581009701293033*^9, 
  3.58100976625759*^9}, {3.581009904408815*^9, 3.581009955838854*^9}, {
  3.581010008635179*^9, 3.581010080532068*^9}, {3.581010131032171*^9, 
  3.581010185640777*^9}, {3.581010254980221*^9, 3.581010429751747*^9}, {
  3.581010463220685*^9, 3.581010568191648*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQe0lEW271tOn0MGAxgwYc4555wT5qwgCqKoqKAoCGYlioABJUhQwAAS
JecsUXIOKuYZZ+7cCXfmju/8du2q/upQ3ae7z9e+t9abWeswfqGr/lVfhR3+
e9c1jVo++MAjjVo2a9yo/mVPNGrxYLPGT9a/9LEnSm8V7ZRIVJpU+rehfoL/
/i2RsP/8lvj1+63yzxT+4XZ5N+rL/5W80axJ41WHHXLwtLPOOJ2/JcccfWTy
5282NZHHyUuGDx00+7RTThp8Y4NrT546ftR9crt4pz9+t6Vz82ZNWr7Uvk2v
hnffcemwIQMTTcM/aZq5ogdMiTcM7NPro5uuv67h2292fue+e++6q1fPbokH
5VnRne+99eZPu+266ytPPtY8sacHv+6GlUvebXTPncU/fbORO1zX+HbjalNp
EY+ad3z1Rbky2EvOHz1s6MzTTzuFq31WLZn37Z577lHpD9s3h37SNHMtBnvJ
rX179ay3ZukCrg5YtmDW36pUrkzTFP7C44895vAFs0y/72Hgm1YUHTt7yrje
d99xK3+JIvm3xJbE3/7LF85588H7G1Hhvdn9hD/bhsYGX/vWLR9/6/6G99jH
f9i5du1DFs2ZFmqxYo5WnHjI3Ltw5KeDN9bffz8+fkKaXqltm6dbJpKt27d5
ml7s+lDT++t/9eVsbeOB5me7r1+xmP4+YcbEsbb40Hfh1x0ee/hBi3Lb3vXq
nTJl3MgQymaBonX4XTNkQJ8H3uz8+riLLjiPz2sGcvFhX86e2qxLh5e5ch9E
x9JBprR73u3Rdd7JJ54Q+fJBoHRnzwcaed156MLZwe58KFC09gF993qL5qYp
Ot3u796lA0VZhN5gL27wYb/3nn6+bWuumGUrDj/sUFvae/fedXtopM844/RT
04x07ydNM1ShXXj10IF9aQhXTbp1eu3zKy+/1PY6xbZ7ptUTS48+6ogdge+6
ec2yAbfdfMN9Pd/o1P/2W26kFtvD1330wft97rr9VrnXOLW8dHz0oaaPvf5S
ewZuZHnx338wQ/mKmjEy8Nabrmdh+eyaqy4/Y8Lo4bbT9li3fNH2PffYPToY
8lhKy7+xi7lh1+v+/FMj8ihRxB03hasF7u0WuLfr7/De71HHfzD/38MSGmvV
/jM0/4P5/z6WGIZms8C9B2O+F6rj/x/oWwP3ZOsb959y8i2nivxfWCdKxlpH
Wt2lKKZqggpLkaewVDK/9tSLuKqvKv+3g1IgnVjM+5vTFfqeeVDy8zeb3+jy
+viiP2zfYpQ3+ZkKb9XNS54onxN0reX+Tz6cPeGxhz+Tq73LHRhBSTyngdHL
PCjt660r77r9w4unT1ic2KfceoOydD71Xjd+1JeL7rt3sFxlqDenCaVlT3+o
6Se3jB42P9ay3zUPTp8/Y9n6224eKKNh33jLHtrm6RGPDOo3Q67iKvsd82D/
9cvX/HTNlf1qfL9lU2K/eMvu3unVcS+91W2SXMVV9tvmwc7fbtz4y9VX9N1r
8+p1if3jLbtlv/em9X++7Wi5iqvst8yD5C/fbtl60/X9T1g8d7kqwbGVzdie
+vCDn8hVzGXPbdJ4KHMz1rJ7pubO6jtvG1SpdM1JHBBv2Z8/9cTwBz4eNFuu
4iq7h3lw8Oqlq3+49up+VX/cttnatOIq+53XXhrr5k5cZXc3D5gzzJ0629av
tyauuMru8GbnCT06vmI23rjKftM8sHOeNStxcLxlt3n/7SluzpdXtjxJW2I3
84BR8f11V/c7cvnClaYn5N0Mxp3ySmQPGP70k5/L1SExtf8N86BY16VTv5z1
VeLQeMu+d9iQOZMfafapXMVVdlfzgDVj1Z0qpxwWb9nXjxu54MvGDYfIVcxl
L7i/0ZAbvhixINayu5gHF82YuNitp4fHW/b4Fs0/a/jZkDlyFVfZnc0D9sRv
briuP5J14oh4y/6w3TMj2dflKq6yO5kH+61fsRYZquZ3mzcmjoy37Dc7vTbu
te5dJspVXGV3NA88GeqoeMt+us+7U916GlfZHcwDxse311/7gchQR8db9j3D
h84d1+IRo2/FVfbr5gE61fJ77vzwsqnjFiWOibdsykRfo464y6Y/nAwVV9mv
mQenfDn7qy033zCg8k9fb04cW07ZmfddLXFky8eHNxs8YGbqC+a9775qHhy7
dP6K7Q2u/UDkvONiar+WjW7Xyq5LcZX9inlw+IpFq5BPRbc7Pt6yBzzfZhQy
k1zFVfbL5sGBa5atZj1lfUqcEG/Z77/8/BgnV8dV9kvmwb4bVq5lPd3t6/Ub
EifGWza6dKdunSbIVVxlGwev7AN/vPLyvuxjiZPiLZs9lzEuV3GV/YJ5YHVp
9MfEyfGWjew374H7hspVzGXPL5X9bhr7+fxYy37ePLhq0tiFK+6+40OR/U6J
t2xw3zxmuMEdV9ntzYMrJn+xcGnDuz+S/evUeMvGdsH3lKu4ym5nHpwzZ+pS
7H7S36fFWza2iweHDJglV3GV/Zx54NkuTo+37F6vvjD2hbe7T5ar8srOvKe3
NQ+wVDiLxWnuZ/ns6VoiMjU2Frk6I6b2tzEPdv1mwwbQ1l+3fE3izHjLfr0U
93uvvGBwx1X2s+ZB9e+3bgI3YyNxVrxlPz6g9/SB7duMkqu4yn7GPKjy49eb
v76hQX+xtJwdb9lIksOszSWuslubB9hckH2RgRPnxFt2k6GDZqGry1VcZT/t
97fYis6Nt2zGievvuMp+yjzwbO/nxVu2Z3uPuWxsUOyPsZbdyjy4cMakxU5v
PD/esic++vCnjT4bbGxFcZXd0jxgzvAtxVZ0Qbxlj37ysWFu342r7CfNg9MW
zPxqc+mcF9wXxlv2F49H9PTyys687z5hHjBT/F7Oe9/VEj073EUxtf9x8wD9
hf1L9MaL4y3b07/iKruFebD71rXr0Xf32bhybeKSeMsGMywFuYqr7MfMA+yG
4AZ/4tJ4y/bsnnGV/ah5gBT589VX9q27dd36xGXxlv38O90nv/vai0Y+i6vs
R8yDWts3b6S/D1qzbHXi8njLbt3n3anYdOQqrrKbmwfoGNjPDlu5eFXiinjL
fqJ/7+mD27YeKVdxlf1wqr+/a3DNB9jRElfGWzb6Ue+X24+Rq7jKfig1vlkH
sUclroq37LbvvZXyk2YoW0lk6WJ7cqJCKXvKmv2PXzJvReLqcqtOF5qTU9UH
mAe/jXo69UBX0fs+/Wi28xRkgJNbLE9xRdHp3oSsi13ivFlTliSuSY9OOZ1e
vExOvK0MGO4Y+em8mc0e+FiuMmBQrpwXCiNfKTMPL1SzShRYY7CCiaflSldU
jegACUe0VLjtigB9AB+vXF1b3mANx6lUGMuFqd7AH3z5lNLeuC6m9SBDfdgI
sbnJ1e9QH3bJBta+V8j6LjD30JnW3n6r8a83iKk+EzEoHEV8kHIVV9n3+7hZ
GxLXx1s28/yuzz82uOMq2wR9FcHtcLhviLfsGc2afHz3cMUdV9kmyq6ItXfD
rTcNFNw3xlv2pEcf+pQdSK7iKlvH/K9ftKtZ++etK+RKbUdnzZ22FL0Vm1Xi
psLXhy7rdPBC1qc2PfRyp+neXPj64HS79hWyvrNSc2jd7bcMlO93SwHrU5s0
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
oN/Z41jpV8EljcInR40VEoOOd498pRhIpOpOCX8vpvp0qfEYWDoHOHLeneAb
V326wno0LJ33KNNwo8R6EVd9+rLHxdL6vFM6e8VUn27NHiFLk/djwRhuteS4
6lPpw2Nl6RoNRwlNS6zecdWnkpxHzdL64E04rfjdmOpTOdXjYpkVsIS6qNP+
wM7Ht2KqWtUEj4dlpn4JapM7c7YAVauO5HGwNCl01LF11PaVE1dM7nhoIq56
VT/1yFdGOitGV7Oe+v1+WD9364SX68VWr2rmHv/KCKLF9pBaUkrHXq9aTDwK
lgrAnC7DCbO2zriqNCakKh7tqvQOBgm6N+7qjIWuWpRmVfWHbZv+ctwxjafe
dOU5/+rfvIjkuPZEqe4xVWtMkyXQq35u0++2uWefe5okbKtbK/Fb32aJotQJ
UXU2rjLa5xuxVi3Hoiw+/UxzLErlVH3u5a7l1JdZWtNaMJBlPNGpkysqH8lM
axlxxWWXlK2FLI3u5S4x9Z1KXKSn+373unWkpkqmvm1716tHuroqP2xdZ9cE
zkDZvuceu/MGGYebvtHxVZ0/RfZ+FPPX9fbaK3bMpl8l+ZpNk0oKM4z9ds2s
+c2GVWTg4xlJ2CJt+P1wGukySWZFWx8J4lQTPW7W5HH2NhNRZUxOmimLjjSH
hUKHad7Wx9hWdGePG/GpvX3x5x9/qOgeCJyQdHevyAlJcaFTqdgmI+x75223
6LdNnvPFiE92hFZSNoO0XXnMyUNFi848+ySbMrnclSBHlINuubEBtaw76MAD
LErSClsodKbmQiZbs0OpCO3iuODMs07+uW2/24SvFtfiaCAmH+702ksWzp5r
v1qoFpgbBvbpZecP7iEj2FWnozgBaeLNV5/NhvHLbrvW/fGA+icz/XnmUdvi
7cxqZCW0SG8c0EfESuo8cOn8mQtOPP447ndu3qyJ0VmK7faJxuz0NV2RPApc
vCOzBM8eGcKBw/+T4PrXWrVq6uLJwrTHuuWGCVzFh8oVwbIi1Omi5NHlOscE
VVW96WeeLnsxafO0a0pYIK/8+MMPeEai2n533HrzbptWL628I1SY0SIH6hrg
Ues6xQo12eGxhx8E6t+qVK5MD+u2Qy5NvFN2kokIYcZqSRQqg4CMtJhNFK3H
xOsYL1qcZHaoHj9z0hc69Wt9vX4lOTe5jS8tAJQ/a2mx5p0oZ69DvECZ8RYo
81qr/OS6q690iX7ToIQyis9EVT6P2vd6TCjVRLB5v333sTnirdGr46MPNXUb
jppFOBoCV5b44hWXxwh8LV5cNj/7sqOOPMLi6t60cUOHS4Uoku9dOnW8mfOK
yyMSvhorruQjHV55wSaarr59k5ILJPHsmkMOPpBHuMEVHRku3amnaqDwuIev
xIuOPIK2h27t26unandk3h94603Xc5tJwnJvO5APi3dMPqzabDzO4ssxQdR9
G0kCNzypxXUTLgETWWj/Uq1aNZ5BK9lvxaK5aiok8NRRLxSix3V8KSaIyi58
+KMPZrqsXmqm8wiPL8ZbH9snJiTJo6XzzWM9vlBOfZmVqAPMA2+R0YUaw44c
0Jkq0Sc8tnPF56NYac37lta8rUzNMPhcMj47FKNcx/Yx9bFiqP3z1hW/ftGu
ZhSDjaeW1HlqGvcIj+0KiEHXNJL5Nxk6yARDKgaP9fhc4TGQ6pED+ORK55xH
fWxbeAxIEcwBsfXpUuHxH9sUEIPuGwPbtxnlUvsoBo8E+WzhMbDOsafJlUoS
ZZmQrQsPg90AjmOE47sDHfLpmGBoLAG5HRy1VKssy4l8Kt4qz5o7bak7i8wU
sAMxslW8VeLmJYmGnLWza6rKKP2xZUxVahAK8S8c8CZXWmVZkuOT8VZJGCTp
2eRKDxEty2p8It4q6Vjy3By2cvEqjXPagdD4eExVanCRFxapVZblMrYo4FxV
0YRgfRcyWTcFI0pafKzwMKBXIUhKjuLdUzCi7MRHCwhDxRcYf85/qzDKUhQf
KTwMHDmc1iFXxtG0A0+xeeFh4NfBQiOHmupZtWXJig+XAyMr6dKrXOU5nDsu
x3+k8ihP8UFXQwUEzFDluHrcRrpXqvIoRbFZAT9A9dQHwN0uH0Al4LI8xQcL
CENFSkLAsCrIlcIoS1ZsGhMMDbttMG7kAnd2wd6pKqOMxSbxVgnb2XX2Pqkq
o7TFB2Kq8oTUGHfLTaTKKHfx/nir5DCPBZYdqMcol+UuNo63SisOCjvQhIrs
wF28L6YqNWT+3ddeHNv2vbfM5hqpMspdbBRvlefPmrzEpdPeP1VllLvYsIBz
VVUOonY5gJSTchP1UzCi3MV7Y4KhYV0OQgQG9EzONZarCIwod/GewsPgPFpY
v3Kl73ncxbsLjwHZkkzXHBps4wA97uJdBcSgDgWOoe38RkeT/kwxeCzGOwuP
Aea143prOKbHZ7yjgBjUMEx2FZdwSzF4fMbb02NQnxAOOOzLDd9+s/M79917
1129enbLOu6mPHxk6EIxkCsN2PW4jreVh68Eyy0+S1knli2YhWMml6i6KMS/
jWlTuSzEI1YsWvn9dVebgAgNafaokLemh6hizYUjPx2Mn1i8uznh0pw8MK6h
PsqVYvDokbekx6CnUl0zZEAffOPwKPZZtWReTl8wkhrIRXKrOdZjTd5cble0
bfN0y9dbNLey5K8Z4uyiNZN15vl3NJubBut7/MkGrqga3ui9eujAvkTbcYVf
6fMrL780t9GrO7XHnryx3FkDaQEnArMGItMZE0YPz61eFUo8FuUNMa0YKmN5
jMnrYypbRUaPHdkgprJVAvboj9fFVLYK9B6/8dqYyladxeMwXhNT2TqVPJ7i
1bmVXS1wL6TthVSvitzTiexRHc/NEt//g83RfCUejfKcwjRnt8C9XX+H936P
Ov6DOdffFtt7XubC0FjKttz/DNH/YI4Vc0n0XjTD5c4FHKXCl5B/+vOPSoa/
mUel/0z5PW8YWaL48VdfeO7nXXfZBUYHsjjH2Wv+tfCzMzI8k/JNRLnKE5Vh
rziCaenf3yuXlMD6g/2licgyv3NaFu9Ivf+I1lul6vdb1sK3tjQ+conc8f7b
3TccUH9//vvI7F47NbvXBMDfox1bdNb4kZ+R0ATgll6JBM7p13J1ZJbvnZrl
e4LBJFWwCgHZQyCqcnC5zWjo3TsrcG/HcpIoipDbJ55/7tn897Hh22eGb0uB
Jt9EQk9DGn7VFZfRlxAqLTDv3lmBezuWk8QAwHN4RyjZx4Zvnxm+LQWaVBza
y8XPt27ZAiITQ/vlli0eiVLkrx/U9z3uczL4240b3l3tu81rrK+7R5P77rVD
s3GPrh01MAqi2aTzzjGtqRt+9cDsXz0+T5DGEFyNj3HFJx/1//DmG65D/4fF
+O+ddtrpj7Vr12JUt2nbuhWc5up5VrNfoCW18yxr10BZutXbEAZDPzPsYUYv
ZHx5w2TEsVl9S378egOtjERqVGfiOG576R/kXlYTnnKY+qLjjj2ag9459N02
offdd9xqucscXQ+B0CZEDXy88PsH5Pj+sTG1wcyxGtCAqdd2H2RbTAH1v/py
NiPDEp8pB0Nb1Ziq3zfQ7Foxlb1LoOxdU2XvvXrJ/FYvtntWy04y6DGAMdAh
fv4lOlgqU+v8k044nnennHPWGa89/shDWPDu796lg666lQlesh1IKAdjefK5
Z5/ZrEuHl+1gsUThGWecfuroyy6+EDtTpsESfD/DYAm+f2xMbTDlSLgQOajs
e889+9STds5CNed9GwpBWInamipef/rRUvGyQ6NF2R9MDvs7toi/RXeGnZmO
R8yfOdmOy6uGDuqHSGBjFogHsNxi+OzcO2jJvBkESvFbjYIAtI2xOnrutAmw
ZymiTtpvnfYn9XP/iYzOOjtvXbe8ejytUkmRW7brFh97zFEyMTWAJxqeQiiC
PKsST/X7pN1xKlz0zukHCv1nW7T06KOO0IFi3pG0ehTO1foDD6jPW3NOPflE
NbQTV7TvysXmDAel7S0/4vDDeG3wjQ1EemRZ7tXw7jsyDIp0P8kwKNL9xAwK
s48izNpV16LLpUGGz5UkenDLvvvszauEQJWkVhQbNMnf6RPHfJ5PLXun/TY5
FVM7z08ssQPEXhCoaIM/nRchJalUZq/iKXI7d6w/SOTs3dJ+qcy/2z/P38kC
VIfNIlEk0Z3+Zy6/UUonYAKh+4gIZ9xTSaJebXc17/jqi9kWGWpLnSx/G+q/
zF/PnBAj8iayqH0DwcdSK9nXrDTyypOPNVdFi2lCJbKYhETTOtn/PCQl5/Dz
EzM0wlh3kyhe0U27VoafZJAxgu+HZJjMvR6pwUntNcz3dCXwVzW1RlgxFMmi
9rZ1jmtLWIkt48mX27fV/mGYU7ykYKyeZXU1si9yj/iLPDFDY+tlWZ1yntlv
7XuPdnj5+VoxFF0zQxm1cuuNzKOCsH2WJFmWapjFCf3QlaI2NRsBjORvOcko
Lrbke9/p3kWXeMgBaLeyxlULVJM01TDRiFuSq+JA1TWyr2b336eaEwOdsXeW
HWnkmWKWVRvnz9+Z40cNsxthueVm26RagfJqV7yLMi/r2OhsyxDfUe7swgEp
w/4SQVA71/Z56/Ztns6kGWTz85DSksPPpYl1EL92ydAcbWo0qcBXRx5xuIjU
tTL8LsMqH3w/91VekV004pOP7FM+KcKA/Qho4fbZyVPHj7I5DUsXmU3777fv
f1WvXh2aQgbBO8sSQlpBbiXIJhISiWtlaKapqJh1nns8w6QlFuraGX6X4eME
38/345QgUkTnPXk9SHWtG4k1j/KHjKz0EGtuIyF2IsPHyebnGb5MNj83n0V+
6YuwtTI30JyEJfZPCDfPPvdMKzJMMABavPZiO/u15p5y0gloyztnLi2DipXu
JyFFLptPVtnmb2Bwcge3C+qMtF5tz9iAeIdlFAlSg+oxCXEbTwnGrgzaTpYl
pFe7si3huCxaZc4SS7Kmoa9TIjWqCoASizdAZOFdsigug7qU8Xe5qxfmZMAk
OyzmKP6Qvg3wqmjbvIDaRCXIVaxGX55w3LFslNg4VQYuIcwaMRGL9j+TSUnI
wlDSXKgPdu3wiq2fFSH0ZXfJq6TQF86vpKMq3hlmIJTwDpUToU/FPR9odA+b
Vo2K15C+uRUqNne7gh4qyVM8IPSrhtfLXm/XOWzZmFVs/pub+vd+x62BmqGg
3TOtnti6z9715A2dNCxs7j3d8mACWiSdHnmoSfpBlG2RxWWLFE1Hcx5xwIR7
v+J17QD/qLx6sJrtQbL5Y0tefejBB608/NBDFh5/7DFrDz7oQMxJGDyMXav4
kEVzplnFB6+3CF7V8/94Nh+Kzb6WbS9VaKDUzHl4Gv9pMa09bdLYEZhh6Chy
c9lvj1t66PXXXo25CX0FJVi1L1EjMUE90+7Zp/Az9rnr9lvVOpzE88TvsFDf
1ufdHtroLg8/+IDY67natdxiKpcthnnIfzOUEsWSCK5o/IXnnwtdIbJ35lrP
DnCPKbdnaod6BlcDuw6bG8qeNVIjK7Lp4f+jKmtPtfZ8/hgzNcuttkqo2miv
ZNspu+X57UMfMvMoU7Z21PFnuQHePU0igmmF8S/yuSYiwM0s1GauDg/89gJz
D2c6tUeypBXxubkHPdrGJjD1mfOmnQb9W/c3vMeix0G/d5ZwbsvYeJNVUlLR
4NkkdxPAk4E2aOQpesrHDa656sj5MybZHGo2CR0KHWKY4RYkaYJN08JtbUmU
XoCNce/sMWRuTA/zlOFGPh3GAL9+xtxmbtkfIRQqSJtZjT+mloJkgNrbj73+
Uvt9wmWbYCYvb1MEkEk9LXmmWGLxgLDBm1wMSeRJfmBDNQygYngINsMSM4Zs
X3bI4ymyUhA9y8ew4XxlazFxNZK+kF2rfeuWj2Oh1c0NlK5blYxiMpsmkXLY
ZdiQcGVpzgab10vWJTNQqx+6cPY0piX3+X9yCfHVWSysGwTl9vJPBw+w0XFl
i9fYG2Yr9nx0V7t/hEC+bUqhlzDw8Dp+dROmX4VhhuYjA6i0T23qJQQmzIgm
uKZq5R+2rWcy2nSa9CnLEZmjSG1GaIgqyDvUdEdquWatJKIEBsuLTz3xqB4u
kzCbXpIpgv2SHuBVE9df+cTpE8dQIYdgUTkZ6RBvZVe/PvxT4QyZ8BabwHnC
BeedQ9O6PtT0/oRpfomdLDQd8ZEJiXH2hsBPokV2T801Z3dQc9GrTzz6ML9h
L0i0TE1Vm50TbfaqLH8eqJLR+t0eu9eVxutvQM5vgJvQLAT47Bhd0bIZ7bz3
xCvPt01clWV5AQzWjcTXtb+xflpUa4sBJRBflzCF9D0+Iu9Jcs2rsixvRwxV
Wa8ZgdjC5Pyv0rsHL547nVHH+imxXQZHVZK5UhbUHXGHld7FS2KVSvkGV+VQ
bhSPWUQrM7PBzKxGEIZZN+SG667htzraKl/22eABrNj0C5oIq5XjCl6TRTlS
rwkcy4I6mtjp/wDibVn/\
\>"]],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "^", "2"}], "-", 
      RowBox[{"x", " ", "y"}], "+", " ", "y"}], "\[Equal]", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "-", 
      RowBox[{"3", 
       RowBox[{"x", "^", "2"}]}], "+", "x", "+", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "^", "2"}], " ", "-", 
          RowBox[{"x", " ", "y"}], "+", " ", "y"}], "\[Equal]", 
         RowBox[{
          RowBox[{"x", "^", "3"}], "-", 
          RowBox[{"3", 
           RowBox[{"x", "^", "2"}]}], "+", "x", "+", "1"}]}], ",", "30"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "LightBrown"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "700"}], ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"15", ",", "20"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581010757099698*^9, 3.581010764075529*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
oPnqjfwdmd3wf89r/gfp1YWi
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {Hue[0.67, 0.6, 0.6], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
         156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
          170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
         183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
          197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
         210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
          224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 
         237, 238, 239, 240, 241, 242}], LineBox[CompressedData["
1:eJwl01WQFgQUBtB/F9ilFiSkBVYaBOlSurtLBJSWBglplFC6u7tDAQHpkFJa
ulMFlIbdZYnD8HC++3Rn7sw3N7x559qdggKBQBrxxHzKM57zgggiieIl0bzi
NW8I2AsimBjEJBYhhBKbOMQlHvEJIwEJ+YBEJCYJSfmQZCQnBSlJReqg93d+
RFrSkZ5wPiYDGclEZrKQlWxkJwefkJNcfEpu8pCXfOSnAAUpRGGKUJTP+Jxi
FKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcBDWnEFzTmS5rQ
lGZ8xdc0pwUtaUVr2tCWb2hHezrQkXeld6YLXenGt3SnBz3pxXf0pg996Ud/
BjCQQXzPDwxmCEMZxo/8xHBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxm
DnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcfP/MJ6NrCRX9nEZrbwG1vZxnZ2
sJNd7GYPe9nH7+znAAc5xGH+4E+OcJRjHOcEJznFX5zmDGc5x3kucJFLXOYK
V7nGdW5wk1vc5g5/8w//cpd73Oc//ucBD3nEY57wlGc85wURRBLFS6J5xWve
EAj2/wQTg5jEIoRQYhOHuMQjPmEk4C3w3Y99
         "]]},
       RowBox[{
         RowBox[{"y", "-", 
           RowBox[{"x", " ", "y"}], "+", 
           SuperscriptBox["y", "2"]}], "\[Equal]", 
         RowBox[{"1", "+", "x", "-", 
           RowBox[{"3", " ", 
             SuperscriptBox["x", "2"]}], "+", 
           SuperscriptBox["x", "3"]}]}]],
      Annotation[#, $CellContext`y - $CellContext`x $CellContext`y + \
$CellContext`y^2 == 
       1 + $CellContext`x - 3 $CellContext`x^2 + $CellContext`x^3, 
       "Tooltip"]& ]}], 
   {Hue[0.67, 0.6, 0.6], AbsolutePointSize[12], 
    PointBox[{0.14179104477611884`, 0.6996268656716421}]}, InsetBox[
    StyleBox[Cell["P",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 
       0.8800030518043793]], {0.04850746268656661, 0.9514925373134326}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {Hue[0.67, 0.6, 0.6], StrokeForm[RGBColor[0, 0.666667, 0.498039]], 
    EdgeForm[GrayLevel[0]], EdgeForm[None], 
    LineBox[{{-0.5298507462686569, 0.42910447761194026`}, {
     3.6305970149253723`, 2.1455223880597014`}}]}, 
   {Hue[0.67, 0.6, 0.6], AbsolutePointSize[12], 
    PointBox[{2.4925373134328352`, 1.6884328358208953`}]}, InsetBox[
    StyleBox[Cell["R",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 0.8800030518043793]], 
    {2.3152985074626855`, 1.8749999999999993`}, {Left, Baseline},
    Alignment->{Left, Top}], 
   {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], StrokeForm[RGBColor[
    0.666667, 0.639216, 0.227451]], EdgeForm[GrayLevel[0]], EdgeForm[None], 
    LineBox[{{2.4944048520808177`, 2.7426569136379166`}, {
     2.471901513861372, -1.8563199984197325`}}]}, 
   {Hue[0.67, 0.6, 0.6], AbsolutePointSize[12], 
    PointBox[{2.473880597014925, -0.17723880597014924`}]}, 
   InsetBox["", {2.67910447761194, -0.14925373134328357`}, {Left, Top}, {
    0.09328358208955212, Automatic},
    Alignment->{Left, Top}], 
   InsetBox["\[IndentingNewLine]", Scaled[{0.5, 0.5}], Center], InsetBox[
    StyleBox[Cell["P+P=2P",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 
       0.8800030518043793]], {2.613805970149252, -0.3171641791044773}, {
    Left, Baseline},
    Alignment->{Left, Top}]},
  Axes->True,
  AxesLabel->{"", 
    FormBox[
     StyleBox[
      RowBox[{
        RowBox[{
          RowBox[{"-", 
            RowBox[{"x", " ", "y"}]}], "+", 
          SuperscriptBox["y", "2"], "+", "y"}], "\[LongEqual]", 
        RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"3", " ", 
            SuperscriptBox["x", "2"]}], "+", "x", "+", "1"}]}], 30, 
      StripOnInput -> False], TraditionalForm]},
  AxesOrigin->{0, 0},
  Background->RGBColor[0.94, 0.91, 0.88],
  Frame->True,
  ImagePadding->{{17., 13.}, {16., 46.}},
  ImageSize->700,
  PlotRange->{{-2.125, 4.125}, {-3.125, 3.125}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.581010891525861*^9, 3.581010935952292*^9}, {
  3.581011825349572*^9, 3.581011835270928*^9}, {3.581011871182719*^9, 
  3.581011892834907*^9}, {3.581011932680526*^9, 3.581012084532197*^9}, {
  3.58101215502537*^9, 3.581012174697163*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQe4VFWW76u5dYsoKJgjmEObc2xMqIg5IAYEQZKoiKgoKojkJEjOOSM5
5wySc44ChjZ0z0xPh+mZx+O39jq7qnCfU7cOp5z3fa/9vrpy0lr/s88OK+/H
qjeq8/qb1RvVrVG97EMNqzeoU7fGu2UrvN3w2Km838ViheYe++0pG+PfR2Mx
78/R2J+/Pyh/5vOH05lOlJX/Jb6oW6vGtssuuXjhnbffxm/91b+/Mv7T4X21
5HL8wQmjhy279eYbRz7z5OM3LZg15TU5nf+7P313oEP9urUafd60Se9qr7xY
YfyoobHa7kdqBzN63VB8emj/3iOefeqJaj26dOj52qsvv9y7W+dYHbmW91Kf
7l1+LFO6dMt3364fOzMN/ml7tq7vVb3qS/k/Ht7LGY5LHNm73TDN41L9dq2a
y5HBnig/dfzoJbfdejNH525bv/LImWeeUeiXb/e7HqkdzMVgT1Qe0Lvb2Ts2
rOKo3MZVS/9WpHBhXk3hr7numqsvX7XUtPsZBr55i7xrls2f2e+VFyvzi+XJ
34RHid8Fm9cs71KnZnUYvlqwR/h571DD4GvauNE73WtWq+pd/uXkUqUuWbt8
oeuNFXMq41g9c+6+yeNG7i17wfl8/Ji8eqGPm3zQKBZv3LTJB7Rip3q1a5bd
tHqZvuOF5rHTd29ZR3tfv3jOdI+867vwdNu336jjofzmnLPPvnn+zMkulHUd
pLX7PTZqSP/Xu3RoM/P+e//A5zUdOf+y1csW1O3YtgVH9oNoX7rIUKvaq2un
lTfdcH3Kl3cCpTm7vV49rTkvXbPM2Zz1HKS1DWi7Ng3qm1fR4Vbzy45tIeUh
TOvs+U8OH9jng2YfN+aIUbbl8ssu9aj1efXlKq6evvj2227x6elpj9QOYKFN
WGn00AG8CEe1OrdvPbHiwxW8Vofspx++13DD76+64tfAS+/fsXHIC889/Vq3
L9oPrvL8M3DxWviJEYP69n+5SmU5VyM5vbR7q17tt9t83pSOmzK9pN9fJ4C+
oqaPDK387FNMLF899ujDt8+eOsFrtDN2bV777ZlnnJ7aGUJMpZlPnGJOePP1
YP6USLkUy+OMHcLFHOfKOM6V/g3u+y14/Avz/x4WV18r9q+u+S/M//tYIuia
dR3n6kR8zsXj/x/oBx3nZOmb+S86YekUkf+5daJ4pDx8dZe8iNg4FZa8NIWl
kHk6Tb2Iin1R+d+vlAJpxHzu3+9HtI+5kPjp8P4vOraZlffLtweM8iaPqfBW
3NyUJspnBV251Bw7fNnst9/4So7OydgxnJJ4Vh2jt7lwrK0Pbn25yvAHFs1e
Fzs3I1+nLB2G7xOzpqxe+9qrI+UogG9WA0ppL6pXe+zzU8d/HSntXubCbV8v
3rj7heeGSm84L1rao5t8MOnNYQMXy1FUtHuaCxfs3rzjx8cqDizx/YF9sfOj
pf1l+1YzP+/eea4cRUW7h7lw8pG9e3+u9MiAs/Zv3xW7IFrajQb2WTi42cdT
5Sgq2t3NhfjPRw4cfPapwdevW7FZleDIaNO3F7xRZ6wcRUx7Ra0aoxmbkdLu
lhw72196YVihY3NOrFy0tCe+33DC62OGLZOjqGh3NRcu3r5h+w+PVxpY9I/f
7PdsWlHR7tn68+l27ERF+0tzgTHD2Dn1m927PRNXVLTbdukwu2u7lmbhjYp2
F3PBG/PMWbGLo6XdpG+P+XbMZ6ItV3wpdjYX6BXfP1Fp4JWb12w1LSH3Bhh3
MlFkDZjwwbsT5eiSiN7/C3MhX+elW1Yv3RS7NFrar44ftXzem3XHyVFUtDuZ
C8wZ215SOeWyaGk/NXPyqtU1qo2So4hpr6pZfdTTMyatipR2R3Ph/sVz1tn5
9PJoac9qUP+ral+NWi5HUdHuYC6wJh5++onBSNaxK6KlPfzTDyezrstRVLTb
mwvn796yExnqpO/2741dGS3tLu1bz2z9Zcc5chQV7XbmQpoMdVW0tD/o32uB
nU+jot3WXKB/HHnq8UEiQ/0+WtpVJ4xeMbPBm0bfiop2G3MBnWpz1ZeGP7Rg
5trY1dHShib6Gjyipk17WBkqKtqtzYWbVy/bdOC5p4cU/vHQ/tg1GWgHr7tK
cXKjdybUHTlkSfILhl53W5kL12z4esu3Tz4+SOS8ayN6f6WNbveeNy9FRbul
uXD5lrXbkE9Ft7suWtpDmjWZgswkR1HRbmEuXLhj43bmU+an2PXR0u7botk0
K1dHRftzc+G8PVt3Mp+WObR7T+yGaGmjS7fv3H62HEVF2zh4ZR34U8WHB7CO
xW6MljZrLn1cjqKi/Zm54OnS6I+xm6Kljey38vXXRstRxLS/Pib7PTt94teR
0m5mLjw6d/qaLa+8OFxkv5ujpQ3u56ZNMLijot3UXHhk3ow1G6q9MkLWr1ui
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
b/sG1wyt70bkLGKJuGbuMVf8UhOqZXw3+iQZjjQ8ZzgucWTv9uzezaZdkWMF
KV0z834+sm/IC8897Y3cU/duEx+w914qfeHdsEJoeQPML4nhFf9X0ujNCzav
Wd6lTs3qvEqBMwn1PVJTs65bMneGmWkKlzy0e+u/nXRSCU4PrvL8M6nv4EWr
UbbFxtJpzr1fHMJL/i+hwbAsLuzJff3iOdMz5MQq9NQErVqd27fWCnhjn6hU
kVMIAY6mJ8UNa7Xsdq4J0345Fc9aGKqV6WRWtVfXTitvuuH61FGZscH/ac55
GVp9q770gvex2LHZZmip9sjazhovRyZyzDfj4vlMvT6fz/xBs49FiCTznASb
AmfKKnIvU2vjVVde4SH/snaNascjx1BnA2tMtr87Q+PZjLDJRmI4IW3QDSVX
NjvYNmOL2SYlY4uR6mVs8S1LJCcbMiClCoKJTPTN63jKH39BVwHFmJqdVXlA
725mNixy1s6Nq4dWfvYpTjMaWc644m2EqEMHrw9bSshRpeQE6coAeeLEMauA
4srTAiR5yH8pVqwY11hIzt+ydoXO7mkbOOrkRcin3UVCM8b9kkYqnTj4VB3Y
BYcSb2gzYq3QpFm/bJKKOYSjnzZNL9YUWb+Ek4dyD4ekIbvFndn2wTcn5cGI
4OguFGT9Us5AtvkwoNxJKPdHxFeDEQjHQMCWI5NC4BvBUT5a1oRB2b2jzArq
m2ZyTw4/vrf96sZVW9gXQBwdJpnEN9fkzmjhXHFk7/Jt08abHqczNYWN7R7d
mrHql3Bye7Rw0jYHVDhUVbF7qxoR2zcT5Zbcw2F3UFsT3eyr6puiclPu4Xjb
cJJ5pzuax71AkYPnTmrPFHtjRDB0xz42dfmkdzcT/6zJeAxSe/MN0fKjMqp1
bfSPljZDjrgZidKOirbrc6lhkn3bCGKRo6jcggH80IVsnl4mfsHOlwAuhNja
QJU+llR4j0s6F62xM6tB/a/sXt59c9h2yo84drvnfFT8dCswQntQvWUL06ho
6yZobB/WcLAmIUfl7FXaDyyavc7uWB+tIzl9az2t1oZpguhRsW7lkp8SSNsh
u3fu+WFemuCp+r8BP2Iw0cLEE5VLflpgmygJq2z3ioifRhZDF/q5oI2WYjdl
j4q2bvCY5r6ONhIir/jPR3b95asR98qRBsOi5qDJRspPtbq0Ddz0m3tbukt0
TC756fuxsZzdm71H7vlhEbDt+Rvww2JiExmi4lfWXCA31BasiCokRmlTI8Bu
x56JdrDsoRQRdlFVZVR2tY+FkTNc7a0KMYmLJDDKUbccfl/lxzYHyDa/FT8K
6xOPf/KRvXtzyk+1bSJNbTxhVGFPyo+5jjkvlR/ROcQsR8rPFF2XzQqQR6Tt
oqKtCUvs6SYb0nL0ZbS06WN2rYyKtn6DtL2sdA9zNAIr3+aSn+pxZJrbNbVL
7vlRDMauAb8BP9qT0uaiYeWSn+79m6ZrRRUvqOmA1Oi3ts6IabMvDFZmcWlG
RftSc4Hw2goLZhmX8RfRfoO0jWhUR6SUsN1D+TfgR9uxukrb5ZKf6pKkxVpf
babA0Aj4vTFi0BJbwe034Mfch64lBdJOLPBV03eZwV/0NsRrbx8LI/8oRQK0
bIHHjhG1idL2ErAlkycq2q72Vp2NTBXC4uWoQ+75UXmUbSB/K36sAfQnkX4j
5rd92vhnLz+y18hoqqcObdpkii0u1D5afmkbhCg/5gLm2Ej5XWkuMKcRJSWx
lFHRvspcoPKCDWNrFy3tO1cs3GA3pIuKtusbaNI49nBqWshWTrnkpxodaRLN
e3QxVTyjipcP4Md2ctRp+6340Z6Un7ls67ptOeVXzpzDv9Ckbw/jm2kTET8T
vCvZ42u8aMiIaeN8RvaQEtRR0dZ6JARBWHt462hpY1uzNo6IaWNHQ4c6Z++2
nRlpB8sPZhsnsZTZDSpa2MfCyA9KEVuYnbOjSjK5Nvn+6Nry/lHR1mo5ZIag
h8hRy2hpPzlz8iq7j0XEtLEF2jaJivb1yd5hx0lUGTpKm/1bVnle84hpe2u7
uMCjoq0+7F6tm0//uE93M59+Hi3t8kvnrbd1nCOmTU4ee1myoW1ktDWOAP//
5907mzU7quwppc2ersSf5II2azHFidlBNzLaGuLBzqsdvmhnCit9Fi1tYnFs
eFBUtG82FyhRaWviNPOnrWGj5CAQrUqZeHZCeLl3t84FDhtN5UsZHGSVgvFN
ELp59o4Nqzgqt3HVUoLDs4mbT2V9xZa1W79/opKJdwtgrcFZ900eN5I8F9lO
JSt+GoxE6ApuczkKyO7T7aseGzWk/+tdOrQhmezcbetXZtW6ypIIE5t5F8BS
X/HjJh80atOgvpfB8ueACPFULlTca9ZTyxk1sY+VSOsxlUYPHUBUN0fEkk+s
+HCF7HrMzIy9kgh3onnplWx9cvvsqRMi45HVqPoXnf8n6RRznHPla9WJ+Jx/
Ttj/r9DLOM6V/g3u+y14/Avz/x6Wf3XNf2H+fxRzpq4pCT7yZzB/VHw6ai4d
+zP/tzxhAmDz32n12SdsDUUKEoLoVSsXzdEcfve12wOuCX2TWhgzlfELk3/l
pWXx+3vhRILkXBIlY1cV4J5bC3CP8P1HKt8iRb8/sJOKC17yLPmpL/bt8eWe
cmUv4N9XFuy2Wwp2mwD4e2rD5t05a/JXJMkC3CuegOjaue7rJrXhygLed0sB
7xMMprqDpjnlkQhKEjk7lOkG7+nn7nSc+zWdOBoR5S3mlL/nLv59jfv0He7T
QtAUzvDyFSc8+shDtCVpzB6wtHN3Os79mk4czZTrJMqhJV7jPn2H+7QQNCUp
tZXzmzVu1IDMO7p2i0YN3kwti/HUsAF9OP/vJUoU71Gj2ivFvtu/Q6OX411r
vfaq1zVrdO3UTgOUSJic+4e7zduc5r71woLfel1IkMZ8VoyPwZamw597+gkU
XdJ72fiYfS/p1ezLmKw3kD2b8x1vUiokrdIOWrq+e2VLTL6kSfKn95LhKnf8
u/mkagVgX0HeMqVWS3EGjrdrKj9S6plNuPrHU8uUYedUtvSTzV/1Ffq98mJl
r8TAkTPPPINEWC/QzvHx3PeXy/L+ayJ6BzPGSpBLD1+v+UgIRocuu2n1MnqG
V24AOliAikbE/jzHa5eMiPYpDtqlk7TZW/a95p9+pLTjdHosPXR0Epj/ktpZ
qIp64Osbr7+Oe+fffeftrd95sx4mqJpfdmzrVU59qU/3Ll4DvtK76xf05Xn3
3HVH3Y5tW3idxcugX3z7bbew2yKGl6DO4rw/oLM4778moncwdKREEOUEvPs+
+ej9d70xS70G7vfKlFD/RY00J87fv7ecOG1XbzFF9OIMDu85loi/pa4MJzMc
r/h6yTyvXz46ethARAKvtAhVOLwceUo/cO6i9SsXHzr7rLN4VuskAtqrq/T7
FQtnk+4NiVN9v7XvI2Wzf0R656knH9y1uXg0b6WSIqe8plt3zdVXycA09Q3y
UwvIUM9DrhWJhv25vivOCZM+2b+j0H7eG7HXtnYUc49UfoE4R7svLFeWu5bf
ctMNalGm5s95W9eZ+BtTNCex+YrLL+O2kc88KdIj0zL7jwd0Cr9HAjqF3yOm
U5h1FGHWm3U9dNm8kCleFqdi2IHzzj2HW6mBlkjOKF7ZNH63zZk2MQyXc3y/
TVZkSoX8xFIDgyIklCDzyr9Zs3pSUinMWsVV5HbOeA4NkbPL+H6p4OcuCPmc
TECnsljE8qSiW/pnzvxS6oRlAKH7iAinhdOpe+c1V/12rZoXlKTrXU4t4LOu
9gv+eqaok8ibyKLeHQg+KjHEWdc8aaTlu2/XV0WLYQITmUxcoumpBX/cJSVn
8fgNAS9hdsKKo3ilLtolAx4JkDGc97tkmOBWT+FgpfYS5ntaCvyKJucITwxF
sij1za4t3tehDopH490WTT/W9qGbQ15K2xQvILsSBSd5RvQkbwh42bMLyM5M
MnHWW+++t9q2aFYyAtInBdAomV1rBPeKSY889CBTkkxLJczkhH5oqahNbcFd
d9wGBSR/HflxFBeP8qs9v+yoUzxea7RbmeOKOdjEDRsGGoV25CjfwbpEwdmc
/tuwucHRGOcUsCF15xKmVa+2J787Zk0Z7y2EGekW9JVKOuiVOvEmCp7WsdF5
b4b4jnLnTRxEFXhPIghq43pt3rhpkw+CNIOCPO5SWrJ4XF7xVMSvUwJeR1+V
qAGP4KYrr7hcROqSAc8FzPLO+7Of5RXZ/ZPGjvCu8kkRBryPgBbuXbtpwawp
WkWMSWbfBeef9x/FixfHvx8geBeQgksryI6CLCIukbhkwGsaRvnM85zjGiYt
sVCXCngu4OM47w/7cRKIFKnjnsrEFD7UhcQzj/JDRta4Cs/cRnnEWMDHKcjj
AV+mII+bzyJPpouwJYNf0IRXif2TqJSPPvnwPWq/0gEatG7+qfe1Vtx84/Vo
yycHUwtQsfwecSlyBflkhb0Kq3ROzuB2QZ2Rt1fbMzYg7mEaRYLUSreYhDiN
pwRjV4C2U0AK/mpXQSlcW4C3MjF8ceY09HUowlFVAJRYvAEiC59SAHIB6lLg
c9mrF6Ykb5wVFnMUP6RvA7yoVwIUtQkmyFXMRquvv/YaFkpsnCoDJ6gLiJiI
Rfuf8XgcCnQlY1GJ1+nUtqXHnxnB9WVPCUXJ9YXDUbrqxBtD60RzD8ypNAnj
bq9Xr8qiVeLEOfi/7gmRzd6uYLpOHlfxgNCuWg9S1npvnsOWjVlFr+U9O7hf
TzsH6rbjn374XsOD555zttyhg4aJzd6nSx4hdB6S9m/Wq+XfiQpKMv94kqLp
FDH3UwPZ3n/ivH4F/6pQLVjMa0GqpGJL3n7pxRdtvfzSS9Zcd83VOy++6ELM
SRg8tCj/JWuXL/QUH7zeIngVD//xvNLBscLZtdIJdZSTsu6eWsebt7117vRJ
mGFoKKrue98et/Topx6vhLkJfQUlWLUvUSMxQX346Ufv42fs/3KVymodjuN5
4jks1C/079VVX7rjG3VeF3s9R6Uzkil8PBnGIf+mK8Xyxz1e6ZFY3qz7yt9D
uELK2pktn1/BvTpjy5RytQyuBlYdFjeUPc9IjazIoof/D1aePdWz5/Ojz5yU
kW0RF9vUViloo5QJ+e1dHzK4l5nSlHmpjj8vNiDtnBZAwrRC/xf5XGsp42aW
mGCOLnc8e685hzMd7inbGeTxuTlHXLHunyK2Tsa8eU+DvnvNalU99Djozykg
nBcCX95UzpCSyng2qdgM8LjjHXSDBPSUMU8+9uiVXy+e6+1u4O0jgUKHGGZi
C+K8gldXmNP6JqnhBdgYzyk4huCXMeVS4nQ36kLTB3j6Q3OaseU9hFCoIL1d
D/gxtBQkHdQ7/Xabz5ue66ZtiqmmFTRPAWRq38Tx8zDF4gFhgTcbwsSRJ3nA
yzUwgPKJQ/BKjTNiqLHvdXk8RZ4URMvyMdQE8CsuL5rTbEzCqtW0caN3sNDq
4gZK26wajGJKKMWRclhlWJBwZX1gPoRXHF/mJdNRi1+6ZtlChiXn+T/VsPnq
TBaeGwTl9uFxI4eoSPwr8qYybx6jFXs+uqu3frhAmvpUcVoJAw+341d/x4xR
uhmaj3SgY23qlRBHYMKMaKp4FC38wze7GYzehjq0KdMRBdLZH4C8CFWQf8Xp
xeR0zVxJOgURLM3fb/iW7nKjNcniDBHsl7QAtzYwi8YNi+ZMgyH7NMCcjSMQ
b2VVf8r9qMQMmWLxXrW42ff+4W5erVO92jV1q5iEN1h4dcRHBiTG2acdj6SS
/DI51qzdQc1FrRq+9QbPsBbEGiWHqre/ENrsowV83MGS3vrdGaefJi+vz4Cc
Z4Abe9ucw2dH70qlTW/nvoYtm32sFd8z03Ng8NxIfF3vGc9Pi2rtYUAJxNcl
kUJ6Hx+R+/D4exgy0vs1hqLM1/RAbGGyG8SxsxevW7GIXsf8KclJBkdRtnOC
FqE74g47dhYviadUyjd4NAu6qXjMJFqYkQ1mRjWCMJF1o55+4jGe1d5W+KGv
Rg5hxqZd0ESYrWys4GMFoCN8Kxu+mUNHY7/7vylYqLg=\
\>"]],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "^", "2"}], "-", 
      RowBox[{"x", " ", "y"}], "+", " ", "y"}], "\[Equal]", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "-", 
      RowBox[{"3", 
       RowBox[{"x", "^", "2"}]}], "+", "x", "+", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], " ", ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "^", "2"}], " ", "-", 
          RowBox[{"x", " ", "y"}], "+", " ", "y"}], "\[Equal]", 
         RowBox[{
          RowBox[{"x", "^", "3"}], "-", 
          RowBox[{"3", 
           RowBox[{"x", "^", "2"}]}], "+", "x", "+", "1"}]}], ",", "30"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "LightBrown"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "700"}], ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"15", ",", "20"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.580994452102882*^9, {3.580994531261408*^9, 3.580994537655823*^9}, {
   3.581012202337901*^9, 3.581012213023887*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
oPnqjfwdmd3wf89r/gfp1YWi
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {Hue[0.67, 0.6, 0.6], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
         156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
          170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
         183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
          197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
         210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
          224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 
         237, 238, 239, 240, 241, 242}], LineBox[CompressedData["
1:eJwl01WQFgQUBtB/F9ilFiSkBVYaBOlSurtLBJSWBglplFC6u7tDAQHpkFJa
ulMFlIbdZYnD8HC++3Rn7sw3N7x559qdggKBQBrxxHzKM57zgggiieIl0bzi
NW8I2AsimBjEJBYhhBKbOMQlHvEJIwEJ+YBEJCYJSfmQZCQnBSlJReqg93d+
RFrSkZ5wPiYDGclEZrKQlWxkJwefkJNcfEpu8pCXfOSnAAUpRGGKUJTP+Jxi
FKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcBDWnEFzTmS5rQ
lGZ8xdc0pwUtaUVr2tCWb2hHezrQkXeld6YLXenGt3SnBz3pxXf0pg996Ud/
BjCQQXzPDwxmCEMZxo/8xHBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxm
DnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcfP/MJ6NrCRX9nEZrbwG1vZxnZ2
sJNd7GYPe9nH7+znAAc5xGH+4E+OcJRjHOcEJznFX5zmDGc5x3kucJFLXOYK
V7nGdW5wk1vc5g5/8w//cpd73Oc//ucBD3nEY57wlGc85wURRBLFS6J5xWve
EAj2/wQTg5jEIoRQYhOHuMQjPmEk4C3w3Y99
         "]]},
       RowBox[{
         RowBox[{"y", "-", 
           RowBox[{"x", " ", "y"}], "+", 
           SuperscriptBox["y", "2"]}], "\[Equal]", 
         RowBox[{"1", "+", "x", "-", 
           RowBox[{"3", " ", 
             SuperscriptBox["x", "2"]}], "+", 
           SuperscriptBox["x", "3"]}]}]],
      Annotation[#, $CellContext`y - $CellContext`x $CellContext`y + \
$CellContext`y^2 == 
       1 + $CellContext`x - 3 $CellContext`x^2 + $CellContext`x^3, 
       "Tooltip"]& ]}], 
   {Hue[0.67, 0.6, 0.6], AbsolutePointSize[12], 
    PointBox[{0.6735074626865669, 0.6436567164179108}]}, 
   InsetBox["", {0.8134328358208952, 0.8395522388059704}, {Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["P",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 
       0.8800030518043793]], {0.7667910447761186, 0.7462686567164185}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {Hue[0.67, 0.6, 0.6], Dashing[{Small, Small}], StrokeForm[RGBColor[
    0.219608, 0.592157, 0.666667]], EdgeForm[GrayLevel[0]], EdgeForm[None], 
    LineBox[{{0.6735074626865664, 2.882462686567164}, {
     0.6735074626865659, -2.565298507462685}}]}, 
   InsetBox["", {0.7947761194029848, 2.817164179104478}, {Left, Baseline},
    Alignment->{Left, Top}], 
   InsetBox["\[Infinity]", Scaled[{0.5, 0.5}], Center], 
   InsetBox["\[Infinity]", Scaled[{0.5, 0.5}], Center], InsetBox[
    StyleBox[Cell["\[Infinity]",
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 
       0.8800030518043793]], {0.570895522388059, 2.8358208955223887`}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   {Hue[0.67, 0.6, 0.6], AbsolutePointSize[12], 
    PointBox[{0.6828358208955216, -0.9514925373134311}]}, InsetBox[
    StyleBox[Cell["-P",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left],
     FontSize->24,
     FontSlant->"Italic",
     Background->RGBColor[
      0.9400015259021897, 0.9100022888532845, 
       0.8800030518043793]], {0.8134328358208952, -0.9608208955223875}, {
    Left, Baseline},
    Alignment->{Left, Top}]},
  Axes->True,
  AxesLabel->{"", 
    FormBox[
     StyleBox[
      RowBox[{
        RowBox[{
          RowBox[{"-", 
            RowBox[{"x", " ", "y"}]}], "+", 
          SuperscriptBox["y", "2"], "+", "y"}], "\[LongEqual]", 
        RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"3", " ", 
            SuperscriptBox["x", "2"]}], "+", "x", "+", "1"}]}], 30, 
      StripOnInput -> False], TraditionalForm]},
  AxesOrigin->{0, 0},
  Background->RGBColor[0.94, 0.91, 0.88],
  Frame->True,
  ImagePadding->{{17., 13.}, {16., 46.}},
  ImageSize->700,
  PlotRange->{{-2.125, 4.125}, {-3.125, 3.125}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.581013006132511*^9, 3.581013045523159*^9}, {
  3.5810130793642*^9, 3.581013129021312*^9}, {3.581013160948784*^9, 
  3.581013164441321*^9}, {3.581013200633242*^9, 3.58101326380472*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
TYTVymIFzy+DjvB1GbVlhI5mNvtfLh7TeQ==\
\>"]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcAdd", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], ",", "p1_", ",", "p2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "m", ",", "x1", ",", "y1", ",", "x2", ",", "y2", ",", "x3", ",", "y3", 
        ",", "w"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x1", ",", "y1"}], "}"}], "=", "p1"}], ";", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x2", ",", "y2"}], "}"}], "=", "p2"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Handle", " ", "identity", " ", "cases"}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"x1", "\[Equal]", "\[Infinity]"}], ",", 
         RowBox[{"Return", "[", "p2", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"p", ",", "1"}], "]"}], "+", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"Subscript", "[", 
             RowBox[{"p", ",", "1"}], "]"}]}], ")"}]}], "=", "\[Infinity]"}], 
        "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x1", "\[Equal]", "x2"}], "&&", 
          RowBox[{
           RowBox[{"y1", "+", "y2"}], "\[Equal]", "0"}]}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "}"}], "]"}]}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "If", " ", "we", " ", "are", " ", "doubling", " ", "a", " ", 
         "point"}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"p1", "\[Equal]", "p2"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Check", " ", "for", " ", "vertical", " ", "tangent"}], 
          "*)"}], 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"y1", "\[Equal]", "0"}], ",", 
            RowBox[{"Return", "[", 
             RowBox[{"{", 
              RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "}"}], "]"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Compute", " ", "the", " ", "slope", " ", "of", " ", "the", " ", 
            "tangent"}], "*)"}], 
          RowBox[{"m", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", 
               RowBox[{"x1", "^", "2"}]}], "+", "a"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", " ", "y1"}], ")"}]}]}], ";"}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "else", " ", "compute", " ", "the", " ", "slope", " ", "of", " ", 
           "the", " ", "chord"}], "*)"}], 
         RowBox[{"m", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y2", "-", "y1"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"x2", "-", "x1"}], ")"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x3", "=", 
        RowBox[{
         RowBox[{"m", "^", "2"}], "-", "x1", "-", "x2"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y3", "=", 
        RowBox[{
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{"x1", "-", "x3"}], ")"}]}], "-", "y1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x3", ",", "y3"}], "}"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcY", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], ",", "x_"}], "]"}], ":=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"a", " ", "x"}], "+", "b"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEcAdd", "[", 
     RowBox[{"pt1_", ",", "pt2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pt3", ",", "pt4"}], "}"}], ",", 
      RowBox[{
       RowBox[{"pt4", "=", 
        RowBox[{"EcAdd", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "pt1", ",", "pt2"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"pt3", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"pt4", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"pt4", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ContourPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "^", "2"}], "\[Equal]", 
            RowBox[{
             RowBox[{"x", "^", "3"}], "+", 
             RowBox[{"a", " ", "x"}], "+", "b"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
           RowBox[{"Axes", "\[Rule]", "True"}], ",", 
           RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
           RowBox[{"PlotPoints", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"15", ",", "20"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"pt1", ",", "pt2", ",", "pt3"}], "}"}], "]"}], ",", 
            RowBox[{"ColorData", "[", 
             RowBox[{"1", ",", "2"}], "]"}], ",", 
            RowBox[{"Point", "[", "pt4", "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{"pt1", ",", "pt3"}], "}"}], "]"}], ",", 
            RowBox[{"ColorData", "[", 
             RowBox[{"1", ",", "3"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{"pt3", ",", "pt4"}], "}"}], "]"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", 
    RowBox[{"-", "5"}]}], ";", 
   RowBox[{"b", "=", 
    RowBox[{"-", "1"}]}], ";", 
   RowBox[{"x1", "=", 
    RowBox[{"-", "1.2"}]}], ";", 
   RowBox[{"pt1", "=", 
    RowBox[{"{", 
     RowBox[{"x1", ",", 
      RowBox[{"EcY", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", "x1"}], "]"}]}], "}"}]}], ";", 
   RowBox[{"Print", "[", "pt1", "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DemoEcAdd", "[", "]"}], ":=", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"PlotEcAdd", "[", 
       RowBox[{"pt1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"pt", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"EcY", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b"}], "}"}], ",", 
            RowBox[{"pt", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "440"}]}], "]"}], ",", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\< Elliptic Curve Point Addition \>\"", ",", 
         RowBox[{"TraditionalForm", "[", 
          RowBox[{
           RowBox[{"y", "^", "2"}], "\[Equal]", 
           RowBox[{
            RowBox[{"x", "^", "3"}], "+", 
            RowBox[{"a", " ", "x"}], "+", "b"}]}], "]"}]}], "}"}], "]"}], ",",
       "18"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"pt", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.38"}], ",", "0"}], "}"}], ",", "Locator", ",", 
      RowBox[{"Appearance", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<|\>\"", ",", "20", ",", "Red"}], "]"}]}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.580998791924086*^9, 3.580998791929897*^9}, {
   3.580998862461934*^9, 3.580998878017829*^9}, {3.580999078135443*^9, 
   3.58099909565721*^9}, 3.580999486409218*^9, {3.580999517686888*^9, 
   3.580999519472127*^9}, {3.580999901066469*^9, 3.580999913405913*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.2`"}], ",", "1.808867048735202`"}], "}"}]], "Print",
 CellChangeTimes->{3.580999914496169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"PlotEcAdd", "[", 
      RowBox[{"pt1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pt", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"EcY", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b"}], "}"}], ",", 
           RowBox[{"pt", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"TraditionalForm", "[", 
           RowBox[{
            RowBox[{"y", "^", "2"}], "\[Equal]", 
            RowBox[{
             RowBox[{"x", "^", "3"}], "+", 
             RowBox[{"a", " ", "x"}], "+", "b"}]}], "]"}], "}"}], "]"}], ",", 
        "18"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"pt", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.2"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.38"}], ",", "0"}], "}"}], ",", "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<|\>\"", ",", "20", ",", "Red"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580998810643998*^9, 3.580998810646036*^9}, {
  3.580998951944283*^9, 3.580998988925246*^9}, {3.580999082607825*^9, 
  3.580999102630814*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`pt$$ = {-1.2, 0}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`pt$$], {-1.2, 0}, {-0.38, 0}}}, Typeset`size$$ = {
    600., {310., 314.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`pt$4242$$ = {0, 0}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`pt$$ = {-1.2, 0}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`pt$$, $CellContext`pt$4242$$, {0, 0}]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`PlotEcAdd[$CellContext`pt1, {
          Part[$CellContext`pt$$, 1], 
          $CellContext`EcY[{$CellContext`a, $CellContext`b}, 
           Part[$CellContext`pt$$, 1]]}], ImageSize -> 600, PlotLabel -> Style[
          Row[{
            
            TraditionalForm[$CellContext`y^2 == $CellContext`x^3 + \
$CellContext`a $CellContext`x + $CellContext`b]}], 18]], 
      "Specifications" :> {{$CellContext`pt$$, {-1.2, 0}, {-0.38, 0}, 
         ControlType -> Locator, Appearance -> Style["|", 20, 
           RGBColor[1, 0, 0]]}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{651., {341., 346.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`PlotEcAdd[
         Pattern[$CellContext`pt1, 
          Blank[]], 
         Pattern[$CellContext`pt2, 
          Blank[]]] := 
       Module[{$CellContext`pt3, $CellContext`pt4}, $CellContext`pt4 = \
$CellContext`EcAdd[{$CellContext`a, $CellContext`b}, $CellContext`pt1, \
$CellContext`pt2]; $CellContext`pt3 = {
            Part[$CellContext`pt4, 1], -Part[$CellContext`pt4, 2]}; {
           
           ContourPlot[$CellContext`y^2 == $CellContext`x^3 + $CellContext`a \
$CellContext`x + $CellContext`b, {$CellContext`x, -5, 5}, {$CellContext`y, -4,
              4}, Axes -> True, PerformanceGoal -> "Quality", 
            PlotPoints -> {15, 20}], 
           Graphics[{
             PointSize[0.02], 
             Point[{$CellContext`pt1, $CellContext`pt2, $CellContext`pt3}], 
             ColorData[1, 2], 
             Point[$CellContext`pt4], 
             Line[{$CellContext`pt1, $CellContext`pt3}], 
             ColorData[1, 3], 
             
             Line[{$CellContext`pt3, $CellContext`pt4}]}]}], $CellContext`pt1 = \
{-1.2, 1.808867048735202}, $CellContext`EcAdd[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]]}, 
         Pattern[$CellContext`p1, 
          Blank[]], 
         Pattern[$CellContext`p2, 
          Blank[]]] := 
       Module[{$CellContext`m, $CellContext`x1, $CellContext`y1, \
$CellContext`x2, $CellContext`y2, $CellContext`x3, $CellContext`y3, \
$CellContext`w}, {$CellContext`x1, $CellContext`y1} = $CellContext`p1; \
{$CellContext`x2, $CellContext`y2} = $CellContext`p2; 
         If[$CellContext`x1 == Infinity, 
           Return[$CellContext`p2]]; If[
           
           And[$CellContext`x1 == $CellContext`x2, $CellContext`y1 + \
$CellContext`y2 == 0], 
           Return[{Infinity, Infinity}]]; 
         If[$CellContext`p1 == $CellContext`p2, If[$CellContext`y1 == 0, 
             
             Return[{Infinity, Infinity}]]; $CellContext`m = (
              3 $CellContext`x1^2 + $CellContext`a)/(2 $CellContext`y1); 
           Null, $CellContext`m = ($CellContext`y2 - \
$CellContext`y1)/($CellContext`x2 - $CellContext`x1)]; $CellContext`x3 = \
$CellContext`m^2 - $CellContext`x1 - $CellContext`x2; $CellContext`y3 = \
$CellContext`m ($CellContext`x1 - $CellContext`x3) - $CellContext`y1; \
{$CellContext`x3, $CellContext`y3}], $CellContext`a = -5, $CellContext`b = \
-1, $CellContext`x1 = -1.2, $CellContext`EcY[{
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]]}, 
         Pattern[$CellContext`x, 
          Blank[]]] := 
       Sqrt[$CellContext`x^3 + $CellContext`a $CellContext`x + \
$CellContext`b]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.580998839054453*^9, {3.580998952987527*^9, 3.580998989779142*^9}, {
   3.58099909035847*^9, 3.580999103439408*^9}, 3.580999525705856*^9, 
   3.581000350154461*^9}]
}, Open  ]]
},
WindowSize->{1265, 883},
WindowMargins->{{4, Automatic}, {4, Automatic}},
ShowSelection->True,
FrontEndVersion->"8.0 for Linux x86 (32-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb",
PrivateNotebookOptions -> {
 "VersionedStylesheet" -> {"Default.nb"[8.] -> False}}
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3580543428-4403620"->{
  Cell[787, 28, 3164, 51, 82, "Print",
   CellTags->"Info3580543428-4403620"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3580543428-4403620", 210567, 4124}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 205, 4, 50, "Input"],
Cell[787, 28, 3164, 51, 82, "Print",
 CellTags->"Info3580543428-4403620"]
}, Open  ]],
Cell[3966, 82, 2783, 58, 69, "Input"],
Cell[CellGroupData[{
Cell[6774, 144, 1792, 45, 69, "Input"],
Cell[8569, 191, 32879, 557, 736, "Output"]
}, Open  ]],
Cell[41463, 751, 1522, 37, 50, "Input"],
Cell[42988, 790, 1536, 40, 69, "Input"],
Cell[44527, 832, 1584, 41, 69, "Input"],
Cell[46114, 875, 1421, 37, 50, "Input"],
Cell[47538, 914, 1243, 32, 50, "Input"],
Cell[CellGroupData[{
Cell[48806, 950, 843, 23, 30, "Input"],
Cell[49652, 975, 664, 20, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50353, 1000, 585, 16, 30, "Input"],
Cell[50941, 1018, 463, 15, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51441, 1038, 911, 28, 30, "Input"],
Cell[52355, 1068, 593, 19, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52985, 1092, 498, 16, 34, "Input"],
Cell[53486, 1110, 308, 9, 30, "Output"]
}, Open  ]],
Cell[53809, 1122, 1785, 54, 50, "Input"],
Cell[55597, 1178, 1221, 32, 50, "Input"],
Cell[56821, 1212, 1061, 28, 50, "Input"],
Cell[CellGroupData[{
Cell[57907, 1244, 513, 14, 30, "Input"],
Cell[58423, 1260, 431, 12, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58891, 1277, 500, 15, 30, "Input"],
Cell[59394, 1294, 123, 3, 30, "Output"]
}, Open  ]],
Cell[59532, 1300, 2033, 52, 107, "Input"],
Cell[61568, 1354, 48012, 840, 747, 17815, 344, "CachedBoxData", "BoxData", \
InheritFromParent],
Cell[109583, 2196, 1605, 44, 69, "Input"],
Cell[111191, 2242, 43627, 748, 747, 15197, 281, "CachedBoxData", "BoxData", \
InheritFromParent],
Cell[154821, 2992, 1680, 46, 69, "Input"],
Cell[156504, 3040, 38415, 662, 747, 14924, 276, "CachedBoxData", "BoxData", \
InheritFromParent],
Cell[CellGroupData[{
Cell[194944, 3706, 8503, 242, 430, "Input"],
Cell[203450, 3950, 153, 4, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203640, 3959, 1594, 44, 69, "Input"],
Cell[205237, 4005, 4910, 103, 704, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
